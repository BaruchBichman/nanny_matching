<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PLWPF"
        xmlns:BE="clr-namespace:BE;assembly=BE" x:Class="PLWPF.FindNannyWindow"
        mc:Ignorable="d"
        Title="FindNannyWindow" Height="600" Width="1000" Background="LightGray" FontSize="16" FontFamily="Berlin Sans FB Demi" >
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="textBlock" Grid.Row="0" HorizontalAlignment="Center" Margin="0,10,0,0" Height="auto" TextWrapping="Wrap" Text="Choose the Mother's ID:" VerticalAlignment="Center" Width="auto" FontWeight="Medium"/>
            <ComboBox x:Name="MotherIdComboBox" DisplayMemberPath="Id" Grid.Row="1" SelectionChanged="MotherIdComboBox_SelectionChanged" HorizontalAlignment="Center" Margin="0,10" VerticalAlignment="Top" Width="120"/>

        </Grid>
        <Grid x:Name="grid1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Button x:Name="SelectMother" Content="Select Mother" Background="LightSkyBlue" HorizontalAlignment="Center" Grid.Row="0" VerticalAlignment="Top" Width="120" Height="30" Visibility="Visible" Click="SelectMother_Click">
                <Button.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=MotherIdComboBox}" Value="">
                                <Setter Property="UIElement.IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <TextBlock x:Name="textBlock1" Grid.Row="0" FontWeight="Medium" HorizontalAlignment="Center" Margin="0,10,0,0" Height="auto" TextWrapping="Wrap" Text="Choose the Child's ID:" VerticalAlignment="Top" Width="auto" Visibility="Hidden"/>
            <ComboBox x:Name="ChildIdComboBox" DisplayMemberPath="Id" Height="auto" HorizontalAlignment="Center" Grid.Row="1" VerticalAlignment="Center" Width="120" Visibility="Hidden"/>

        </Grid>
        <Grid Grid.Row="2" x:Name="grid2" Visibility="Hidden">
            <Button x:Name="SelectChild" Margin="0,10" Content="Select Child" Background="LightSkyBlue" HorizontalAlignment="Center" Grid.Row="0" VerticalAlignment="Top" Width="100" Visibility="Visible" Click="SelectChild_Click">
                <Button.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=ChildIdComboBox}" Value="">
                                <Setter Property="UIElement.IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <Grid Grid.Row="2" x:Name="grid3" HorizontalAlignment="Center" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="textBlock2" HorizontalAlignment="Center" TextWrapping="Wrap" FontWeight="Medium" Text="Choose your options:" Grid.ColumnSpan="4" VerticalAlignment="Center" Margin="0,10"/>
            <Label x:Name="flexibleTime" Grid.Row="1" Width="auto" Content="Are you flexible on the hours?" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <CheckBox x:Name="flexibleTimeCheckBox" IsChecked="False" Background="LightPink"  Grid.Column="1" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Center"/>
            <Label x:Name="label" Content="Enter the distance in Km:" HorizontalAlignment="Left" Grid.Row="2" VerticalAlignment="Center"/>
            <ComboBox x:Name="DistanceComboBox" SelectedIndex="10" Background="LightPink"  Grid.Column="1" HorizontalAlignment="Left" Grid.Row="2" VerticalAlignment="Center" Height="25" Width="45"/>
            <Label x:Name="label1" Content="By Car?" Grid.Column="2" HorizontalAlignment="Left" Grid.Row="2" VerticalAlignment="Center"/>
            <CheckBox x:Name="byCarCheckBox" Grid.Column="3" IsChecked="False" HorizontalAlignment="Left" Grid.Row="2" VerticalAlignment="Center" Background="LightPink"/>
            <Label x:Name="label2" Content="Minimum years of experience:" HorizontalAlignment="Left" Grid.Row="3" VerticalAlignment="center"/>
            <ComboBox x:Name="YearsOfExpComboBox" Background="LightPink" SelectedIndex="0" Grid.Column="1" HorizontalAlignment="Left" Grid.Row="3" VerticalAlignment="Center" Height="25" Width="45"/>
            <Label x:Name="label3" Content="Maximum floor:" HorizontalAlignment="Left" Grid.Row="4" VerticalAlignment="Center"/>
            <ComboBox x:Name="MaxFloorComboBox" Background="LightPink" SelectedIndex="0" Grid.Column="1" HorizontalAlignment="Left" Grid.Row="4" VerticalAlignment="Center" Height="25" Width="45"/>
            <Label x:Name="label4" Content="Elevator:" HorizontalAlignment="Left" Grid.Row="5" VerticalAlignment="Top"/>
            <CheckBox x:Name="elevatorCheckBox" IsChecked="False" Background="LightPink"  Grid.Column="1" HorizontalAlignment="Left" Grid.Row="5" VerticalAlignment="Center"/>
            <Label x:Name="label5" Content="Tamat Vacations:" HorizontalAlignment="Left" Grid.Row="6" VerticalAlignment="Top"/>
            <CheckBox x:Name="tamatCheckBox" IsChecked="False" Background="LightPink"  Grid.Column="1" HorizontalAlignment="Left" Grid.Row="6" VerticalAlignment="Center"/>
            <!--<Label x:Name="label6" Content="Only known Nanny:" HorizontalAlignment="Left" Grid.Row="7" VerticalAlignment="Top"/>
            <CheckBox x:Name="knownNannyCheckBox" Background="LightPink"  Grid.Column="1" HorizontalAlignment="Left" Grid.Row="7" VerticalAlignment="Center"/>-->
        </Grid>
        <Grid Grid.Row="3" x:Name="grid4">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Button x:Name="FindNanny" Margin="0,15" Content="Find Nanny" Background="LightSkyBlue" VerticalAlignment="Top" HorizontalAlignment="Center" Height="40"  Width="120"  BorderThickness="3" Visibility="Hidden" Click="FindNanny_Click" />
            <TextBlock x:Name="AppropriateNanny" Grid.Row="0" HorizontalAlignment="Center" Margin="0,10,0,0" Height="auto" TextWrapping="Wrap" Text="Choose a Nanny from the appropriated Nannies:" VerticalAlignment="Center" Width="auto" FontWeight="Medium" Visibility="Hidden"/>
            <Image x:Name="image2" HorizontalAlignment="Left" Height="151"  Grid.Row="1" VerticalAlignment="Bottom" Width="283" Source="Images/nanny-nu.jpg" Margin="100,0,0,15"/>
        </Grid>
        <Button x:Name="SelectNanny" Margin="0,-30" Grid.Row="3" Grid.Column="1" Content="Select Nanny" Background="LightSkyBlue" VerticalAlignment="Top" HorizontalAlignment="Center" Height="50"  Width="120"  BorderThickness="3" Visibility="Hidden" Click="SelectNanny_Click">
            <Button.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=foundNanniesDataGrid, Path=SelectedItem}" Value="{x:Null}">
                            <Setter Property="UIElement.IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <DataGrid x:Name="foundNanniesDataGrid" Visibility="Hidden" SelectionChanged="foundNanniesDataGrid_SelectionChanged" AutoGenerateColumns="False" IsReadOnly="True" Grid.Column="1" Background="LightPink" HorizontalAlignment="center" Grid.Row="2" VerticalAlignment="top" Height="150" Width="450">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Id}"/>
                <DataGridTextColumn Header="Family Name" Binding="{Binding FamilyName}"/>
                <DataGridTextColumn Header="First Name" Binding="{Binding FirstName}"/>
                <DataGridTextColumn Header="Address" Binding="{Binding Address}"/>
                <DataGridTextColumn Header="Phone" Binding="{Binding Phone}"/>
            </DataGrid.Columns>
        </DataGrid>
        <Image x:Name="image1" Source="Images/nanny-nu.jpg" Margin="0,39.333,33.333,158.667" HorizontalAlignment="right" Height="302"  Grid.Row="1" Grid.RowSpan="3" VerticalAlignment="center" Width="441" Grid.Column="1" Visibility="Visible"/>
        <local:DownloadAnimationControl x:Name="Waiting" Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Center"  VerticalAlignment="Bottom" Visibility="Hidden"/>

        <Grid x:Name="contractGrid" Grid.Column="1" HorizontalAlignment="Center" Height="240"  Grid.Row="3" VerticalAlignment="Top" Width="480" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="contractTextBlock" HorizontalAlignment="Center" TextWrapping="Wrap" Text="Fill the details of the contract:" FontWeight="Medium" FontSize="20" VerticalAlignment="Top" Grid.ColumnSpan="4"/>
            <Label VerticalAlignment="Center" Grid.Row="1" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Id Nanny:"/>
            <TextBox x:Name="id_NannyTextBox" Background="LightPink" Width="120" VerticalAlignment="Center" Text="{Binding Id_Nanny, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1" IsEnabled="False" />
            <Label VerticalAlignment="Center" Grid.Row="2" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Id Child:"/>
            <TextBox x:Name="idTextBox" Background="LightPink" Width="120" VerticalAlignment="Center" Text="{Binding IdChild, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1" IsEnabled="False"/>
            <Label VerticalAlignment="Center" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Start Date:"/>
            <DatePicker x:Name="startDateDatePicker" Background="LightPink" VerticalAlignment="Center" SelectedDate="{Binding StartDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Grid.Column="1"/>
            <Label VerticalAlignment="Center" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="End Date:"/>
            <DatePicker x:Name="endDateDatePicker" Background="LightPink" VerticalAlignment="Center" SelectedDate="{Binding EndDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Grid.Column="1"/>
            <Label VerticalAlignment="Center" Grid.Row="1" Margin="3" HorizontalAlignment="Right" Grid.Column="2" Content="Is Per Month:"/>
            <CheckBox x:Name="isPerMonthCheckBox" Background="LightPink" VerticalAlignment="Center" Grid.Row="1" Margin="3" IsChecked="{Binding IsPerMonth, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="3" Content=""/>
            <Label VerticalAlignment="Center" Grid.Row="2" Margin="3" HorizontalAlignment="Right" Grid.Column="2" Content="Sal Per Month:"/>
            <TextBox x:Name="sal_Per_MonthTextBox" Background="LightPink" Width="120" VerticalAlignment="Center" Text="{Binding Sal_Per_Month, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="3" IsEnabled="False"/>
            <Label VerticalAlignment="Center" Grid.Row="3" Margin="3" HorizontalAlignment="Right" Grid.Column="2" Content="Sal Per Hour:"/>
            <TextBox x:Name="sal_Per_HourTextBox" Width="120" Background="LightPink" VerticalAlignment="Center" Text="{Binding Sal_Per_Hour, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="3" IsEnabled="False"/>
            <Label VerticalAlignment="Center" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Grid.Column="2" Content="Theyknow:"/>
            <CheckBox x:Name="theyknowCheckBox" VerticalAlignment="Center" Background="LightPink" Grid.Row="4" Margin="3" IsChecked="{Binding Theyknow, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Right" Grid.Column="2" Content=""/>
            <Label VerticalAlignment="Center" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Grid.Column="3" Content="Signature:"/>
            <CheckBox x:Name="isSignedCheckBox" VerticalAlignment="Center" Background="LightPink" Grid.Row="4" Margin="3" IsChecked="{Binding IsSigned, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Right" Grid.Column="3" Content="" IsEnabled="False"/>

            <Button x:Name="button" Grid.Row="5" Grid.ColumnSpan="2" Background="LightSkyBlue" Content="Add Contract"  HorizontalAlignment="Right" VerticalAlignment="Center" Width="130" Height="40" Click="button_Click"/>

            <Button x:Name="payment" Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="2" Background="LightSkyBlue" Content="Calculate Payment"  HorizontalAlignment="Left" VerticalAlignment="Center" Width="130" Height="40" Click="payment_Click" />
        </Grid>
    </Grid>
</Window>
